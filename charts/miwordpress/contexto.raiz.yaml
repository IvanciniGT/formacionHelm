Capabilities:
          APIVersions:
          - v1
          - admissionregistration.k8s.io/v1
          - admissionregistration.k8s.io/v1alpha1
          - admissionregistration.k8s.io/v1beta1
          - internal.apiserver.k8s.io/v1alpha1
          - apps/v1
          - apps/v1beta1
          - apps/v1beta2
          - authentication.k8s.io/v1
          - authentication.k8s.io/v1alpha1
          - authentication.k8s.io/v1beta1
          - authorization.k8s.io/v1
          - authorization.k8s.io/v1beta1
          - autoscaling/v1
          - autoscaling/v2
          - autoscaling/v2beta1
          - autoscaling/v2beta2
          - batch/v1
          - batch/v1beta1
          - certificates.k8s.io/v1
          - certificates.k8s.io/v1beta1
          - certificates.k8s.io/v1alpha1
          - coordination.k8s.io/v1beta1
          - coordination.k8s.io/v1
          - discovery.k8s.io/v1
          - discovery.k8s.io/v1beta1
          - events.k8s.io/v1
          - events.k8s.io/v1beta1
          - extensions/v1beta1
          - flowcontrol.apiserver.k8s.io/v1alpha1
          - flowcontrol.apiserver.k8s.io/v1beta1
          - flowcontrol.apiserver.k8s.io/v1beta2
          - flowcontrol.apiserver.k8s.io/v1beta3
          - networking.k8s.io/v1
          - networking.k8s.io/v1alpha1
          - networking.k8s.io/v1beta1
          - node.k8s.io/v1
          - node.k8s.io/v1alpha1
          - node.k8s.io/v1beta1
          - policy/v1
          - policy/v1beta1
          - rbac.authorization.k8s.io/v1
          - rbac.authorization.k8s.io/v1beta1
          - rbac.authorization.k8s.io/v1alpha1
          - resource.k8s.io/v1alpha2
          - scheduling.k8s.io/v1alpha1
          - scheduling.k8s.io/v1beta1
          - scheduling.k8s.io/v1
          - storage.k8s.io/v1beta1
          - storage.k8s.io/v1
          - storage.k8s.io/v1alpha1
          - apiextensions.k8s.io/v1beta1
          - apiextensions.k8s.io/v1
          HelmVersion:
            git_commit: f32a527a060157990e2aa86bf45010dfb3cc8b8d
            git_tree_state: clean
            go_version: go1.20.4
            version: v3.12.1
          KubeVersion:
            Major: "1"
            Minor: "27"
            Version: v1.27.0
        Chart:
          IsRoot: true
          apiVersion: v2
          appVersion: 6.1.3
          description: A Helm chart for Kubernetes
          name: miwordpress
          type: application
          version: 1.0.1
        Files:
          .helmignore: IyBQYXR0ZXJucyB0byBpZ25vcmUgd2hlbiBidWlsZGluZyBwYWNrYWdlcy4KIyBUaGlzIHN1cHBvcnRzIHNoZWxsIGdsb2IgbWF0Y2hpbmcsIHJlbGF0aXZlIHBhdGggbWF0Y2hpbmcsIGFuZAojIG5lZ2F0aW9uIChwcmVmaXhlZCB3aXRoICEpLiBPbmx5IG9uZSBwYXR0ZXJuIHBlciBsaW5lLgouRFNfU3RvcmUKIyBDb21tb24gVkNTIGRpcnMKLmdpdC8KLmdpdGlnbm9yZQouYnpyLwouYnpyaWdub3JlCi5oZy8KLmhnaWdub3JlCi5zdm4vCiMgQ29tbW9uIGJhY2t1cCBmaWxlcwoqLnN3cAoqLmJhawoqLnRtcAoqLm9yaWcKKn4KIyBWYXJpb3VzIElERXMKLnByb2plY3QKLmlkZWEvCioudG1wcm9qCi52c2NvZGUvCg==
          3-Deployment.wp.yaml: 
        Release:
          IsInstall: true
          IsUpgrade: false
          Name: release-name
          Namespace: default
          Revision: 1
          Service: Helm
        Subcharts: {}
        Template:
          BasePath: miwordpress/templates
          Name: miwordpress/templates/prueba.yaml
        Values:
          mariadb:
            config:
              customConfigFile: |+
                Esta es la linea 1 del fichero de mysql
                Y esta es la linea 2
                Y esta es la 3
        
        
        
              dbName: 'WORDPRESS '
              existingSecretName: federico
              password: null
              rootPassword: null
              user: null
            image:
              pullPolicy: IfNotPresent
              repo: mariadb
              tag: latest
            persistence:
              capacity: 1Gi
              enabled: true
              existingPvcName: null
              storageClass: null
            resources:
              limits:
                cpu: 200m
                memory: 3Gi
              requests:
                cpu: 1
                memory: 3Gi
            serviceName: null
          wordpress:
            autoscale:
              cpu: null
              enabled: false
              max: null
              memory: null
              min: null
            image:
              pullPolicy: Always
              repo: wordpress
              tag: latest
            ingress:
              domain: null
              tls: false
            persistence:
              capacity: 1Gi
              enabled: true
              existingPvcName: null
              storageClass: null
            replicas: 1
            resources:
              limits:
                cpu: 1
                memory: 1Gi
              requests:
                cpu: 1
                memory: 1Gi